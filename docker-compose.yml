version: '3.8'

services:
  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: booking_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d booking_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: fastapi_api
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/booking_db
    volumes:
      - ./backend:/app/backend
    working_dir: /app/backend
    command: >
      sh -c "
      if [ ! -f /var/lib/postgresql/data/.db_initialized ]; then
        alembic upgrade head &&
        python app/migrations/seeds/initial_seed.py &&
        touch /var/lib/postgresql/data/.db_initialized;
        echo '✅ Database initialized.';
      else
        echo '✅ Database already initialized.';
      fi;
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
  
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: nextjs_frontend
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./frontend:/app
    working_dir: /app
    environment:
      NEXT_PUBLIC_API_URL: http://api:8000

volumes:
  postgres_data: